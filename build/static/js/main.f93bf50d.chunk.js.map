{"version":3,"sources":["components/Messageform.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Messageform","props","useState","value","setValue","chatId","creds","handleSubmit","e","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirtsMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","width","title","height","LoginForm","setUserName","pass","setPass","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f93bf50d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { sendMessage, isTyping } from 'react-chat-engine'\r\nimport { SendOutlined,PictureOutlined } from \"@ant-design/icons\";\r\nconst Messageform = (props) => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value)\r\n\r\n        isTyping(props, chatId)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const text = value.trim();\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, { text })\r\n        }\r\n        setValue('')\r\n\r\n    }\r\n    const handleUpload=(e)=>{\r\n            sendMessage(creds, chatId,{files:e.target.files ,text:''})\r\n    }\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Envia un mensaje... \"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor='upload-button'>\r\n                <span className='image-button'>\r\n                    <PictureOutlined className='picture-icon'/>\r\n\r\n                </span>\r\n            </label>\r\n            <input \r\n            type=\"file\"\r\n            multiple={false}\r\n            id='upload-button'\r\n            style={{display: 'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n\r\n            <button className=\"send-button\" type=\"submit\">\r\n                <SendOutlined className=\"send-icon\"/>\r\n            </button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default Messageform;\r\n","function MyMessage({ message }) {\r\n    if (message?.attachments?.length > 0) {\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt='message-attachment'\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;\r\n","import React from 'react'\r\n\r\nfunction TheirMessage({ lastMessage, message }) {\r\n    const isFirtsMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirtsMessageByUser && (\r\n                <div className=\"message-avatar\" style={{ backgroundImage: `url(${message?.sender?.avatar})` }}></div>\r\n            )}\r\n\r\n            {message?.attachments?.length > 0 ? (\r\n\r\n                <img src={message.attachments[0].file}\r\n                    alt='message-attachment'\r\n                    className=\"message-image\"\r\n                    style={{ marginLeft:isFirtsMessageByUser?'4px':'48px' }}\r\n                />\r\n            ) : <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC',marginLeft:isFirtsMessageByUser?'4px':'48px' }}>\r\n                {message.text}\r\n            </div>\r\n\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage\r\n","import React from 'react'\r\nimport Messageform from './Messageform';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts=(message,isMyMessage)=> {\r\n        return chat.people.map((person,index)=> (person.last_read===message.id &&(\r\n            <div\r\n            key={`read_${index}`}\r\n            className='read-receipt'\r\n                style={{ float: isMyMessage ? 'right' : 'left', backgroundImage: `url(${person?.person?.avatar})`}}\r\n            />\r\n        )))\r\n    }\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                                ? <MyMessage message={message} />\r\n                                : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}></div>\r\n                    {renderReadReceipts(message,isMyMessage)}\r\n                </div>\r\n            );\r\n\r\n        })\r\n    }\r\n\r\n\r\n    renderMessages();\r\n    \r\n\r\n    if (!chat) {\r\n        return 'Loading...🔄'\r\n\r\n    }\r\n    return (\r\n        <div className=\"chat-feed\">\r\n\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat?.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div>\r\n                {renderMessages()}\r\n                <div style={{ height: '100px' }}>\r\n                    <div className=\"message-form-container\">\r\n                        <Messageform {...props} chatId={activeChat} />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;\r\n","import { useState } from \"react\";\r\n\r\nimport axios from 'axios';\r\n\r\nfunction LoginForm() {\r\n    const [userName, setUserName] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = {\r\n            'Project-ID': 'ee5e68c0-1c9c-4939-9901-21d3c33179a2',\r\n            'User-Name': userName, 'User-Secret': pass\r\n        }\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', {\r\n                headers: authObject\r\n            })\r\n\r\n            localStorage.setItem('username', userName);\r\n            localStorage.setItem('password', pass);\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            setError('Oops,credenciales incorrectas😢')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <dir className=\"form\">\r\n                <h1 className=\"title\">\r\n                    Teams pero mas barato xd\r\n                </h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={userName}\r\n                        onChange={(e) => setUserName(e.target.value)}\r\n                        className=\"input\"\r\n                        placeholder=\"Usuario\"\r\n                        required\r\n\r\n                    />\r\n\r\n                    <input type=\"password\" value={pass}\r\n                        onChange={(e) => setPass(e.target.value)}\r\n                        className=\"input\"\r\n                        placeholder=\"Contraseña\"\r\n                        required\r\n\r\n                    />\r\n\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Iniciar sesión</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n\r\n            </dir>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import './App.css';\nimport { ChatEngine } from 'react-chat-engine'\n\nimport ChatFeed from './components/ChatFeed'\nimport LoginForm from './components/LoginForm';\nfunction App() {\n\n  if (!localStorage.getItem('username')) {\n    return <LoginForm />\n    \n  }\n\n  return ( \n    <ChatEngine\n      height=\"100vh\"\n      projectID=\"ee5e68c0-1c9c-4939-9901-21d3c33179a2\"\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}